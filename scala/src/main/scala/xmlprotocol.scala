// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package financialdatagrabber.services.cvm

import scala.concurrent.Future
import financialdatagrabber.services.cvm._

/**
usage:
val obj = scalaxb.fromXML[financialdatagrabber.services.cvm.Foo](node)
val document = scalaxb.toXML[financialdatagrabber.services.cvm.Foo](obj, "foo", financialdatagrabber.services.cvm.defaultScope)
**/
object `package` extends XMLProtocol { }

trait XMLProtocol extends scalaxb.XMLStandardTypes {
  implicit lazy val executionContext = scala.concurrent.ExecutionContext.Implicits.global

  val defaultScope = scalaxb.toScope(None -> "http://www.cvm.gov.br/webservices/",
    Some("tns") -> "http://www.cvm.gov.br/webservices/",
    Some("xs") -> "http://www.w3.org/2001/XMLSchema",
    Some("xsi") -> "http://www.w3.org/2001/XMLSchema-instance")
  implicit lazy val CvmRetornaListaComptcDocsFormat: scalaxb.XMLFormat[financialdatagrabber.services.cvm.RetornaListaComptcDocs] = new DefaultCvmRetornaListaComptcDocsFormat {}
  implicit lazy val CvmRetornaListaComptcDocsResponseFormat: scalaxb.XMLFormat[financialdatagrabber.services.cvm.RetornaListaComptcDocsResponse] = new DefaultCvmRetornaListaComptcDocsResponseFormat {}
  implicit lazy val CvmArrayOfStringFormat: scalaxb.XMLFormat[financialdatagrabber.services.cvm.ArrayOfString] = new DefaultCvmArrayOfStringFormat {}
  implicit lazy val CvmSessaoIdHeaderFormat: scalaxb.XMLFormat[financialdatagrabber.services.cvm.SessaoIdHeader] = new DefaultCvmSessaoIdHeaderFormat {}
  implicit lazy val CvmRetornaListaComptcDocsParticFormat: scalaxb.XMLFormat[financialdatagrabber.services.cvm.RetornaListaComptcDocsPartic] = new DefaultCvmRetornaListaComptcDocsParticFormat {}
  implicit lazy val CvmRetornaListaComptcDocsParticResponseFormat: scalaxb.XMLFormat[financialdatagrabber.services.cvm.RetornaListaComptcDocsParticResponse] = new DefaultCvmRetornaListaComptcDocsParticResponseFormat {}
  implicit lazy val CvmRetornaListaComptcDocsAdmFormat: scalaxb.XMLFormat[financialdatagrabber.services.cvm.RetornaListaComptcDocsAdm] = new DefaultCvmRetornaListaComptcDocsAdmFormat {}
  implicit lazy val CvmRetornaListaComptcDocsAdmResponseFormat: scalaxb.XMLFormat[financialdatagrabber.services.cvm.RetornaListaComptcDocsAdmResponse] = new DefaultCvmRetornaListaComptcDocsAdmResponseFormat {}
  implicit lazy val CvmSolicAutorizDownloadCadastroFormat: scalaxb.XMLFormat[financialdatagrabber.services.cvm.SolicAutorizDownloadCadastro] = new DefaultCvmSolicAutorizDownloadCadastroFormat {}
  implicit lazy val CvmSolicAutorizDownloadCadastroResponseFormat: scalaxb.XMLFormat[financialdatagrabber.services.cvm.SolicAutorizDownloadCadastroResponse] = new DefaultCvmSolicAutorizDownloadCadastroResponseFormat {}
  implicit lazy val CvmSolicAutorizDownloadArqComptcFormat: scalaxb.XMLFormat[financialdatagrabber.services.cvm.SolicAutorizDownloadArqComptc] = new DefaultCvmSolicAutorizDownloadArqComptcFormat {}
  implicit lazy val CvmSolicAutorizDownloadArqComptcResponseFormat: scalaxb.XMLFormat[financialdatagrabber.services.cvm.SolicAutorizDownloadArqComptcResponse] = new DefaultCvmSolicAutorizDownloadArqComptcResponseFormat {}
  implicit lazy val CvmSolicAutorizDownloadArqEntregaFormat: scalaxb.XMLFormat[financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntrega] = new DefaultCvmSolicAutorizDownloadArqEntregaFormat {}
  implicit lazy val CvmSolicAutorizDownloadArqEntregaResponseFormat: scalaxb.XMLFormat[financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntregaResponse] = new DefaultCvmSolicAutorizDownloadArqEntregaResponseFormat {}
  implicit lazy val CvmSolicAutorizDownloadArqEntregaPorDataFormat: scalaxb.XMLFormat[financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntregaPorData] = new DefaultCvmSolicAutorizDownloadArqEntregaPorDataFormat {}
  implicit lazy val CvmSolicAutorizDownloadArqEntregaPorDataResponseFormat: scalaxb.XMLFormat[financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntregaPorDataResponse] = new DefaultCvmSolicAutorizDownloadArqEntregaPorDataResponseFormat {}
  implicit lazy val CvmSolicAutorizDownloadArqAnualFormat: scalaxb.XMLFormat[financialdatagrabber.services.cvm.SolicAutorizDownloadArqAnual] = new DefaultCvmSolicAutorizDownloadArqAnualFormat {}
  implicit lazy val CvmSolicAutorizDownloadArqAnualResponseFormat: scalaxb.XMLFormat[financialdatagrabber.services.cvm.SolicAutorizDownloadArqAnualResponse] = new DefaultCvmSolicAutorizDownloadArqAnualResponseFormat {}
  implicit lazy val CvmRetornaDtLmtEntrDocsArqsDispFormat: scalaxb.XMLFormat[financialdatagrabber.services.cvm.RetornaDtLmtEntrDocsArqsDisp] = new DefaultCvmRetornaDtLmtEntrDocsArqsDispFormat {}
  implicit lazy val CvmRetornaDtLmtEntrDocsArqsDispResponseFormat: scalaxb.XMLFormat[financialdatagrabber.services.cvm.RetornaDtLmtEntrDocsArqsDispResponse] = new DefaultCvmRetornaDtLmtEntrDocsArqsDispResponseFormat {}
  implicit lazy val CvmRetornaListaDownloadDocsFormat: scalaxb.XMLFormat[financialdatagrabber.services.cvm.RetornaListaDownloadDocs] = new DefaultCvmRetornaListaDownloadDocsFormat {}
  implicit lazy val CvmRetornaListaDownloadDocsResponseFormat: scalaxb.XMLFormat[financialdatagrabber.services.cvm.RetornaListaDownloadDocsResponse] = new DefaultCvmRetornaListaDownloadDocsResponseFormat {}
  implicit lazy val CvmLoginFormat: scalaxb.XMLFormat[financialdatagrabber.services.cvm.Login] = new DefaultCvmLoginFormat {}
  implicit lazy val CvmLoginResponseFormat: scalaxb.XMLFormat[financialdatagrabber.services.cvm.LoginResponse] = new DefaultCvmLoginResponseFormat {}

  trait DefaultCvmRetornaListaComptcDocsFormat extends scalaxb.ElemNameParser[financialdatagrabber.services.cvm.RetornaListaComptcDocs] {
    val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[financialdatagrabber.services.cvm.RetornaListaComptcDocs] =
      phrase((scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "iCdTpDoc")) ~ 
      opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "strDtIniEntregDoc")) ^^
      { case p1 ~ p2 =>
      financialdatagrabber.services.cvm.RetornaListaComptcDocs(scalaxb.fromXML[Int](p1, scalaxb.ElemName(node) :: stack),
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: financialdatagrabber.services.cvm.RetornaListaComptcDocs, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(scalaxb.toXML[Int](__obj.iCdTpDoc, Some("http://www.cvm.gov.br/webservices/"), Some("iCdTpDoc"), __scope, false),
        __obj.strDtIniEntregDoc map { scalaxb.toXML[String](_, Some("http://www.cvm.gov.br/webservices/"), Some("strDtIniEntregDoc"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultCvmRetornaListaComptcDocsResponseFormat extends scalaxb.ElemNameParser[financialdatagrabber.services.cvm.RetornaListaComptcDocsResponse] {
    val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[financialdatagrabber.services.cvm.RetornaListaComptcDocsResponse] =
      phrase(opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "retornaListaComptcDocsResult")) ^^
      { case p1 =>
      financialdatagrabber.services.cvm.RetornaListaComptcDocsResponse(p1.headOption map { scalaxb.fromXML[financialdatagrabber.services.cvm.ArrayOfString](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: financialdatagrabber.services.cvm.RetornaListaComptcDocsResponse, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (__obj.retornaListaComptcDocsResult map { scalaxb.toXML[financialdatagrabber.services.cvm.ArrayOfString](_, Some("http://www.cvm.gov.br/webservices/"), Some("retornaListaComptcDocsResult"), __scope, false) } getOrElse {Nil})
  }
  trait DefaultCvmArrayOfStringFormat extends scalaxb.ElemNameParser[financialdatagrabber.services.cvm.ArrayOfString] {
    val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    
    override def typeName: Option[String] = Some("ArrayOfString")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[financialdatagrabber.services.cvm.ArrayOfString] =
      phrase(safeRep(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "string")) ^^
      { case p1 =>
      financialdatagrabber.services.cvm.ArrayOfString(p1.toSeq map { _.nilOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }}: _*) })
    
    def writesChildNodes(__obj: financialdatagrabber.services.cvm.ArrayOfString, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (__obj.string flatMap { scalaxb.toXML[Option[String]](_, Some("http://www.cvm.gov.br/webservices/"), Some("string"), __scope, false) })
  }

  trait DefaultCvmSessaoIdHeaderFormat extends scalaxb.ElemNameParser[financialdatagrabber.services.cvm.SessaoIdHeader] {
    val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    
    override def typeName: Option[String] = Some("sessaoIdHeader")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[financialdatagrabber.services.cvm.SessaoIdHeader] =
      phrase(opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "Guid")) ~ 
      (scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "IdSessao")) ^^
      { case p1 ~ p2 =>
      financialdatagrabber.services.cvm.SessaoIdHeader(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        scalaxb.fromXML[Int](p2, scalaxb.ElemName(node) :: stack),
        scala.collection.immutable.ListMap((node match {
          case elem: scala.xml.Elem =>
            elem.attributes.toList flatMap {
              
              case scala.xml.UnprefixedAttribute(key, value, _) =>
                List(("@" + key, scalaxb.DataRecord(None, Some(key), value.text)))
              case scala.xml.PrefixedAttribute(pre, key, value, _) =>
                val ns = elem.scope.getURI(pre)
                List(("@{" + ns + "}" + key, scalaxb.DataRecord(Option[String](ns), Some(key), value.text)))
              case _ => Nil
            }
          case _ => Nil
        }): _*)) })
    
    override def writesAttribute(__obj: financialdatagrabber.services.cvm.SessaoIdHeader, __scope: scala.xml.NamespaceBinding): scala.xml.MetaData = {
      var attr: scala.xml.MetaData  = scala.xml.Null
      __obj.attributes.toList map {
        case (key, x) => attr = scala.xml.Attribute((x.namespace map { __scope.getPrefix(_) }).orNull, x.key.orNull, x.value.toString, attr)
      }
      attr
    }
    def writesChildNodes(__obj: financialdatagrabber.services.cvm.SessaoIdHeader, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.Guid map { scalaxb.toXML[String](_, Some("http://www.cvm.gov.br/webservices/"), Some("Guid"), __scope, false) } getOrElse {Nil},
        scalaxb.toXML[Int](__obj.IdSessao, Some("http://www.cvm.gov.br/webservices/"), Some("IdSessao"), __scope, false))

  }

  trait DefaultCvmRetornaListaComptcDocsParticFormat extends scalaxb.ElemNameParser[financialdatagrabber.services.cvm.RetornaListaComptcDocsPartic] {
    val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[financialdatagrabber.services.cvm.RetornaListaComptcDocsPartic] =
      phrase((scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "iCdTpDoc")) ~ 
      opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "strDtIniEntregDoc")) ~ 
      opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "strNrPfPj")) ^^
      { case p1 ~ p2 ~ p3 =>
      financialdatagrabber.services.cvm.RetornaListaComptcDocsPartic(scalaxb.fromXML[Int](p1, scalaxb.ElemName(node) :: stack),
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: financialdatagrabber.services.cvm.RetornaListaComptcDocsPartic, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(scalaxb.toXML[Int](__obj.iCdTpDoc, Some("http://www.cvm.gov.br/webservices/"), Some("iCdTpDoc"), __scope, false),
        __obj.strDtIniEntregDoc map { scalaxb.toXML[String](_, Some("http://www.cvm.gov.br/webservices/"), Some("strDtIniEntregDoc"), __scope, false) } getOrElse {Nil},
        __obj.strNrPfPj map { scalaxb.toXML[String](_, Some("http://www.cvm.gov.br/webservices/"), Some("strNrPfPj"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultCvmRetornaListaComptcDocsParticResponseFormat extends scalaxb.ElemNameParser[financialdatagrabber.services.cvm.RetornaListaComptcDocsParticResponse] {
    val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[financialdatagrabber.services.cvm.RetornaListaComptcDocsParticResponse] =
      phrase(opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "retornaListaComptcDocsParticResult")) ^^
      { case p1 =>
      financialdatagrabber.services.cvm.RetornaListaComptcDocsParticResponse(p1.headOption map { scalaxb.fromXML[financialdatagrabber.services.cvm.ArrayOfString](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: financialdatagrabber.services.cvm.RetornaListaComptcDocsParticResponse, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (__obj.retornaListaComptcDocsParticResult map { scalaxb.toXML[financialdatagrabber.services.cvm.ArrayOfString](_, Some("http://www.cvm.gov.br/webservices/"), Some("retornaListaComptcDocsParticResult"), __scope, false) } getOrElse {Nil})
  }
  trait DefaultCvmRetornaListaComptcDocsAdmFormat extends scalaxb.ElemNameParser[financialdatagrabber.services.cvm.RetornaListaComptcDocsAdm] {
    val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[financialdatagrabber.services.cvm.RetornaListaComptcDocsAdm] =
      phrase((scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "iCdTpDoc")) ~ 
      opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "strDtIniEntregDoc")) ~ 
      opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "strNrPfPj")) ^^
      { case p1 ~ p2 ~ p3 =>
      financialdatagrabber.services.cvm.RetornaListaComptcDocsAdm(scalaxb.fromXML[Int](p1, scalaxb.ElemName(node) :: stack),
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: financialdatagrabber.services.cvm.RetornaListaComptcDocsAdm, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(scalaxb.toXML[Int](__obj.iCdTpDoc, Some("http://www.cvm.gov.br/webservices/"), Some("iCdTpDoc"), __scope, false),
        __obj.strDtIniEntregDoc map { scalaxb.toXML[String](_, Some("http://www.cvm.gov.br/webservices/"), Some("strDtIniEntregDoc"), __scope, false) } getOrElse {Nil},
        __obj.strNrPfPj map { scalaxb.toXML[String](_, Some("http://www.cvm.gov.br/webservices/"), Some("strNrPfPj"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultCvmRetornaListaComptcDocsAdmResponseFormat extends scalaxb.ElemNameParser[financialdatagrabber.services.cvm.RetornaListaComptcDocsAdmResponse] {
    val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[financialdatagrabber.services.cvm.RetornaListaComptcDocsAdmResponse] =
      phrase(opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "retornaListaComptcDocsAdmResult")) ^^
      { case p1 =>
      financialdatagrabber.services.cvm.RetornaListaComptcDocsAdmResponse(p1.headOption map { scalaxb.fromXML[financialdatagrabber.services.cvm.ArrayOfString](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: financialdatagrabber.services.cvm.RetornaListaComptcDocsAdmResponse, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (__obj.retornaListaComptcDocsAdmResult map { scalaxb.toXML[financialdatagrabber.services.cvm.ArrayOfString](_, Some("http://www.cvm.gov.br/webservices/"), Some("retornaListaComptcDocsAdmResult"), __scope, false) } getOrElse {Nil})
  }
  trait DefaultCvmSolicAutorizDownloadCadastroFormat extends scalaxb.ElemNameParser[financialdatagrabber.services.cvm.SolicAutorizDownloadCadastro] {
    val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[financialdatagrabber.services.cvm.SolicAutorizDownloadCadastro] =
      phrase(opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "strDtRefer")) ~ 
      opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "strMotivoAutorizDownload")) ^^
      { case p1 ~ p2 =>
      financialdatagrabber.services.cvm.SolicAutorizDownloadCadastro(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: financialdatagrabber.services.cvm.SolicAutorizDownloadCadastro, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.strDtRefer map { scalaxb.toXML[String](_, Some("http://www.cvm.gov.br/webservices/"), Some("strDtRefer"), __scope, false) } getOrElse {Nil},
        __obj.strMotivoAutorizDownload map { scalaxb.toXML[String](_, Some("http://www.cvm.gov.br/webservices/"), Some("strMotivoAutorizDownload"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultCvmSolicAutorizDownloadCadastroResponseFormat extends scalaxb.ElemNameParser[financialdatagrabber.services.cvm.SolicAutorizDownloadCadastroResponse] {
    val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[financialdatagrabber.services.cvm.SolicAutorizDownloadCadastroResponse] =
      phrase(opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "solicAutorizDownloadCadastroResult")) ^^
      { case p1 =>
      financialdatagrabber.services.cvm.SolicAutorizDownloadCadastroResponse(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: financialdatagrabber.services.cvm.SolicAutorizDownloadCadastroResponse, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (__obj.solicAutorizDownloadCadastroResult map { scalaxb.toXML[String](_, Some("http://www.cvm.gov.br/webservices/"), Some("solicAutorizDownloadCadastroResult"), __scope, false) } getOrElse {Nil})
  }
  trait DefaultCvmSolicAutorizDownloadArqComptcFormat extends scalaxb.ElemNameParser[financialdatagrabber.services.cvm.SolicAutorizDownloadArqComptc] {
    val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[financialdatagrabber.services.cvm.SolicAutorizDownloadArqComptc] =
      phrase((scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "iCdTpDoc")) ~ 
      opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "strDtComptcDoc")) ~ 
      opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "strMotivoAutorizDownload")) ^^
      { case p1 ~ p2 ~ p3 =>
      financialdatagrabber.services.cvm.SolicAutorizDownloadArqComptc(scalaxb.fromXML[Int](p1, scalaxb.ElemName(node) :: stack),
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: financialdatagrabber.services.cvm.SolicAutorizDownloadArqComptc, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(scalaxb.toXML[Int](__obj.iCdTpDoc, Some("http://www.cvm.gov.br/webservices/"), Some("iCdTpDoc"), __scope, false),
        __obj.strDtComptcDoc map { scalaxb.toXML[String](_, Some("http://www.cvm.gov.br/webservices/"), Some("strDtComptcDoc"), __scope, false) } getOrElse {Nil},
        __obj.strMotivoAutorizDownload map { scalaxb.toXML[String](_, Some("http://www.cvm.gov.br/webservices/"), Some("strMotivoAutorizDownload"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultCvmSolicAutorizDownloadArqComptcResponseFormat extends scalaxb.ElemNameParser[financialdatagrabber.services.cvm.SolicAutorizDownloadArqComptcResponse] {
    val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[financialdatagrabber.services.cvm.SolicAutorizDownloadArqComptcResponse] =
      phrase(opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "solicAutorizDownloadArqComptcResult")) ^^
      { case p1 =>
      financialdatagrabber.services.cvm.SolicAutorizDownloadArqComptcResponse(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: financialdatagrabber.services.cvm.SolicAutorizDownloadArqComptcResponse, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (__obj.solicAutorizDownloadArqComptcResult map { scalaxb.toXML[String](_, Some("http://www.cvm.gov.br/webservices/"), Some("solicAutorizDownloadArqComptcResult"), __scope, false) } getOrElse {Nil})
  }
  trait DefaultCvmSolicAutorizDownloadArqEntregaFormat extends scalaxb.ElemNameParser[financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntrega] {
    val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntrega] =
      phrase((scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "iCdTpDoc")) ~ 
      opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "strMotivoAutorizDownload")) ^^
      { case p1 ~ p2 =>
      financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntrega(scalaxb.fromXML[Int](p1, scalaxb.ElemName(node) :: stack),
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntrega, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(scalaxb.toXML[Int](__obj.iCdTpDoc, Some("http://www.cvm.gov.br/webservices/"), Some("iCdTpDoc"), __scope, false),
        __obj.strMotivoAutorizDownload map { scalaxb.toXML[String](_, Some("http://www.cvm.gov.br/webservices/"), Some("strMotivoAutorizDownload"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultCvmSolicAutorizDownloadArqEntregaResponseFormat extends scalaxb.ElemNameParser[financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntregaResponse] {
    val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntregaResponse] =
      phrase(opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "solicAutorizDownloadArqEntregaResult")) ^^
      { case p1 =>
      financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntregaResponse(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntregaResponse, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (__obj.solicAutorizDownloadArqEntregaResult map { scalaxb.toXML[String](_, Some("http://www.cvm.gov.br/webservices/"), Some("solicAutorizDownloadArqEntregaResult"), __scope, false) } getOrElse {Nil})
  }
  trait DefaultCvmSolicAutorizDownloadArqEntregaPorDataFormat extends scalaxb.ElemNameParser[financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntregaPorData] {
    val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntregaPorData] =
      phrase((scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "iCdTpDoc")) ~ 
      opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "strDtEntregaDoc")) ~ 
      opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "strMotivoAutorizDownload")) ^^
      { case p1 ~ p2 ~ p3 =>
      financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntregaPorData(scalaxb.fromXML[Int](p1, scalaxb.ElemName(node) :: stack),
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntregaPorData, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(scalaxb.toXML[Int](__obj.iCdTpDoc, Some("http://www.cvm.gov.br/webservices/"), Some("iCdTpDoc"), __scope, false),
        __obj.strDtEntregaDoc map { scalaxb.toXML[String](_, Some("http://www.cvm.gov.br/webservices/"), Some("strDtEntregaDoc"), __scope, false) } getOrElse {Nil},
        __obj.strMotivoAutorizDownload map { scalaxb.toXML[String](_, Some("http://www.cvm.gov.br/webservices/"), Some("strMotivoAutorizDownload"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultCvmSolicAutorizDownloadArqEntregaPorDataResponseFormat extends scalaxb.ElemNameParser[financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntregaPorDataResponse] {
    val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntregaPorDataResponse] =
      phrase(opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "solicAutorizDownloadArqEntregaPorDataResult")) ^^
      { case p1 =>
      financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntregaPorDataResponse(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntregaPorDataResponse, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (__obj.solicAutorizDownloadArqEntregaPorDataResult map { scalaxb.toXML[String](_, Some("http://www.cvm.gov.br/webservices/"), Some("solicAutorizDownloadArqEntregaPorDataResult"), __scope, false) } getOrElse {Nil})
  }
  trait DefaultCvmSolicAutorizDownloadArqAnualFormat extends scalaxb.ElemNameParser[financialdatagrabber.services.cvm.SolicAutorizDownloadArqAnual] {
    val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[financialdatagrabber.services.cvm.SolicAutorizDownloadArqAnual] =
      phrase((scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "iCdTpDoc")) ~ 
      opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "strMotivoAutorizDownload")) ^^
      { case p1 ~ p2 =>
      financialdatagrabber.services.cvm.SolicAutorizDownloadArqAnual(scalaxb.fromXML[Int](p1, scalaxb.ElemName(node) :: stack),
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: financialdatagrabber.services.cvm.SolicAutorizDownloadArqAnual, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(scalaxb.toXML[Int](__obj.iCdTpDoc, Some("http://www.cvm.gov.br/webservices/"), Some("iCdTpDoc"), __scope, false),
        __obj.strMotivoAutorizDownload map { scalaxb.toXML[String](_, Some("http://www.cvm.gov.br/webservices/"), Some("strMotivoAutorizDownload"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultCvmSolicAutorizDownloadArqAnualResponseFormat extends scalaxb.ElemNameParser[financialdatagrabber.services.cvm.SolicAutorizDownloadArqAnualResponse] {
    val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[financialdatagrabber.services.cvm.SolicAutorizDownloadArqAnualResponse] =
      phrase(opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "solicAutorizDownloadArqAnualResult")) ^^
      { case p1 =>
      financialdatagrabber.services.cvm.SolicAutorizDownloadArqAnualResponse(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: financialdatagrabber.services.cvm.SolicAutorizDownloadArqAnualResponse, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (__obj.solicAutorizDownloadArqAnualResult map { scalaxb.toXML[String](_, Some("http://www.cvm.gov.br/webservices/"), Some("solicAutorizDownloadArqAnualResult"), __scope, false) } getOrElse {Nil})
  }
  trait DefaultCvmRetornaDtLmtEntrDocsArqsDispFormat extends scalaxb.ElemNameParser[financialdatagrabber.services.cvm.RetornaDtLmtEntrDocsArqsDisp] {
    val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[financialdatagrabber.services.cvm.RetornaDtLmtEntrDocsArqsDisp] =
      phrase((scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "iCdTpDoc")) ^^
      { case p1 =>
      financialdatagrabber.services.cvm.RetornaDtLmtEntrDocsArqsDisp(scalaxb.fromXML[Int](p1, scalaxb.ElemName(node) :: stack)) })
    
    def writesChildNodes(__obj: financialdatagrabber.services.cvm.RetornaDtLmtEntrDocsArqsDisp, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (scalaxb.toXML[Int](__obj.iCdTpDoc, Some("http://www.cvm.gov.br/webservices/"), Some("iCdTpDoc"), __scope, false))
  }
  trait DefaultCvmRetornaDtLmtEntrDocsArqsDispResponseFormat extends scalaxb.ElemNameParser[financialdatagrabber.services.cvm.RetornaDtLmtEntrDocsArqsDispResponse] {
    val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[financialdatagrabber.services.cvm.RetornaDtLmtEntrDocsArqsDispResponse] =
      phrase(opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "retornaDtLmtEntrDocsArqsDispResult")) ^^
      { case p1 =>
      financialdatagrabber.services.cvm.RetornaDtLmtEntrDocsArqsDispResponse(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: financialdatagrabber.services.cvm.RetornaDtLmtEntrDocsArqsDispResponse, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (__obj.retornaDtLmtEntrDocsArqsDispResult map { scalaxb.toXML[String](_, Some("http://www.cvm.gov.br/webservices/"), Some("retornaDtLmtEntrDocsArqsDispResult"), __scope, false) } getOrElse {Nil})
  }
  trait DefaultCvmRetornaListaDownloadDocsFormat extends scalaxb.ElemNameParser[financialdatagrabber.services.cvm.RetornaListaDownloadDocs] {
    val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[financialdatagrabber.services.cvm.RetornaListaDownloadDocs] =
      phrase((scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "iCdTpPartic")) ~ 
      opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "strNrPfPj")) ~ 
      (scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "iCdTpDoc")) ~ 
      opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "strDtIni")) ~ 
      opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "strDtFim")) ^^
      { case p1 ~ p2 ~ p3 ~ p4 ~ p5 =>
      financialdatagrabber.services.cvm.RetornaListaDownloadDocs(scalaxb.fromXML[Int](p1, scalaxb.ElemName(node) :: stack),
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        scalaxb.fromXML[Int](p3, scalaxb.ElemName(node) :: stack),
        p4.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p5.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: financialdatagrabber.services.cvm.RetornaListaDownloadDocs, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(scalaxb.toXML[Int](__obj.iCdTpPartic, Some("http://www.cvm.gov.br/webservices/"), Some("iCdTpPartic"), __scope, false),
        __obj.strNrPfPj map { scalaxb.toXML[String](_, Some("http://www.cvm.gov.br/webservices/"), Some("strNrPfPj"), __scope, false) } getOrElse {Nil},
        scalaxb.toXML[Int](__obj.iCdTpDoc, Some("http://www.cvm.gov.br/webservices/"), Some("iCdTpDoc"), __scope, false),
        __obj.strDtIni map { scalaxb.toXML[String](_, Some("http://www.cvm.gov.br/webservices/"), Some("strDtIni"), __scope, false) } getOrElse {Nil},
        __obj.strDtFim map { scalaxb.toXML[String](_, Some("http://www.cvm.gov.br/webservices/"), Some("strDtFim"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultCvmRetornaListaDownloadDocsResponseFormat extends scalaxb.ElemNameParser[financialdatagrabber.services.cvm.RetornaListaDownloadDocsResponse] {
    val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[financialdatagrabber.services.cvm.RetornaListaDownloadDocsResponse] =
      phrase(opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "retornaListaDownloadDocsResult")) ^^
      { case p1 =>
      financialdatagrabber.services.cvm.RetornaListaDownloadDocsResponse(p1.headOption map { scalaxb.fromXML[financialdatagrabber.services.cvm.ArrayOfString](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: financialdatagrabber.services.cvm.RetornaListaDownloadDocsResponse, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (__obj.retornaListaDownloadDocsResult map { scalaxb.toXML[financialdatagrabber.services.cvm.ArrayOfString](_, Some("http://www.cvm.gov.br/webservices/"), Some("retornaListaDownloadDocsResult"), __scope, false) } getOrElse {Nil})
  }
  trait DefaultCvmLoginFormat extends scalaxb.ElemNameParser[financialdatagrabber.services.cvm.Login] {
    val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[financialdatagrabber.services.cvm.Login] =
      phrase((scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "iNrSist")) ~ 
      opt(scalaxb.ElemName(Some("http://www.cvm.gov.br/webservices/"), "strSenha")) ^^
      { case p1 ~ p2 =>
      financialdatagrabber.services.cvm.Login(scalaxb.fromXML[Int](p1, scalaxb.ElemName(node) :: stack),
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: financialdatagrabber.services.cvm.Login, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(scalaxb.toXML[Int](__obj.iNrSist, Some("http://www.cvm.gov.br/webservices/"), Some("iNrSist"), __scope, false),
        __obj.strSenha map { scalaxb.toXML[String](_, Some("http://www.cvm.gov.br/webservices/"), Some("strSenha"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultCvmLoginResponseFormat extends scalaxb.XMLFormat[financialdatagrabber.services.cvm.LoginResponse] with scalaxb.CanWriteChildNodes[financialdatagrabber.services.cvm.LoginResponse] {
    val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    import scalaxb.ElemName._
    
    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, financialdatagrabber.services.cvm.LoginResponse] = seq match {
      case node: scala.xml.Node => Right(financialdatagrabber.services.cvm.LoginResponse())
      case _ => Left("reads failed: seq must be scala.xml.Node")
    }
    
    def writesChildNodes(__obj: financialdatagrabber.services.cvm.LoginResponse, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Nil

  }

  trait WsDownloadInfsSoap12Bindings { this: scalaxb.SoapClientsAsync =>
    lazy val targetNamespace: Option[String] = Some("http://www.cvm.gov.br/webservices/")
    lazy val service: financialdatagrabber.services.cvm.WsDownloadInfsSoap = new WsDownloadInfsSoap12Binding {}
    def baseAddress = new java.net.URI("http://sistemas.cvm.gov.br/webservices/Sistemas/SCW/CDocs/WsDownloadInfs.asmx")

    trait WsDownloadInfsSoap12Binding extends financialdatagrabber.services.cvm.WsDownloadInfsSoap {
      import scalaxb.ElemName._
      
      def sessaoIdHeader: Option[SessaoIdHeader] = None

      
      def retornaListaComptcDocs(retornaListaComptcDocs: financialdatagrabber.services.cvm.RetornaListaComptcDocs): Future[financialdatagrabber.services.cvm.RetornaListaComptcDocsOutput] = 
        soapClient.requestResponse(scalaxb.toXML(retornaListaComptcDocs, Some("http://www.cvm.gov.br/webservices/"), "retornaListaComptcDocs", defaultScope),
            scalaxb.toXML(sessaoIdHeader, Some("http://www.cvm.gov.br/webservices/"), "sessaoIdHeader", defaultScope), defaultScope, baseAddress, "POST", Some(new java.net.URI("http://www.cvm.gov.br/webservices/retornaListaComptcDocs"))).transform({ case (header, body) => 
            financialdatagrabber.services.cvm.RetornaListaComptcDocsOutput(scalaxb.fromXML[financialdatagrabber.services.cvm.RetornaListaComptcDocsResponse](({
              scala.xml.Elem(null, "Body", scala.xml.Null, defaultScope, true, body.toSeq: _*)
            } \ "retornaListaComptcDocsResponse").head, Nil)) }, {
              case x: scalaxb.Fault[_] => x
              case x => x
            })
      def retornaListaComptcDocsPartic(retornaListaComptcDocsPartic: financialdatagrabber.services.cvm.RetornaListaComptcDocsPartic): Future[financialdatagrabber.services.cvm.RetornaListaComptcDocsParticOutput] = 
        soapClient.requestResponse(scalaxb.toXML(retornaListaComptcDocsPartic, Some("http://www.cvm.gov.br/webservices/"), "retornaListaComptcDocsPartic", defaultScope),
            scalaxb.toXML(sessaoIdHeader, Some("http://www.cvm.gov.br/webservices/"), "sessaoIdHeader", defaultScope), defaultScope, baseAddress, "POST", Some(new java.net.URI("http://www.cvm.gov.br/webservices/retornaListaComptcDocsPartic"))).transform({ case (header, body) => 
            financialdatagrabber.services.cvm.RetornaListaComptcDocsParticOutput(scalaxb.fromXML[financialdatagrabber.services.cvm.RetornaListaComptcDocsParticResponse](({
              scala.xml.Elem(null, "Body", scala.xml.Null, defaultScope, true, body.toSeq: _*)
            } \ "retornaListaComptcDocsParticResponse").head, Nil)) }, {
              case x: scalaxb.Fault[_] => x
              case x => x
            })
      def retornaListaComptcDocsAdm(retornaListaComptcDocsAdm: financialdatagrabber.services.cvm.RetornaListaComptcDocsAdm): Future[financialdatagrabber.services.cvm.RetornaListaComptcDocsAdmOutput] = 
        soapClient.requestResponse(scalaxb.toXML(retornaListaComptcDocsAdm, Some("http://www.cvm.gov.br/webservices/"), "retornaListaComptcDocsAdm", defaultScope),
            scalaxb.toXML(sessaoIdHeader, Some("http://www.cvm.gov.br/webservices/"), "sessaoIdHeader", defaultScope), defaultScope, baseAddress, "POST", Some(new java.net.URI("http://www.cvm.gov.br/webservices/retornaListaComptcDocsAdm"))).transform({ case (header, body) => 
            financialdatagrabber.services.cvm.RetornaListaComptcDocsAdmOutput(scalaxb.fromXML[financialdatagrabber.services.cvm.RetornaListaComptcDocsAdmResponse](({
              scala.xml.Elem(null, "Body", scala.xml.Null, defaultScope, true, body.toSeq: _*)
            } \ "retornaListaComptcDocsAdmResponse").head, Nil)) }, {
              case x: scalaxb.Fault[_] => x
              case x => x
            })
      def solicAutorizDownloadCadastro(solicAutorizDownloadCadastro: financialdatagrabber.services.cvm.SolicAutorizDownloadCadastro): Future[financialdatagrabber.services.cvm.SolicAutorizDownloadCadastroOutput] = 
        soapClient.requestResponse(scalaxb.toXML(solicAutorizDownloadCadastro, Some("http://www.cvm.gov.br/webservices/"), "solicAutorizDownloadCadastro", defaultScope),
            scalaxb.toXML(sessaoIdHeader, Some("http://www.cvm.gov.br/webservices/"), "sessaoIdHeader", defaultScope), defaultScope, baseAddress, "POST", Some(new java.net.URI("http://www.cvm.gov.br/webservices/solicAutorizDownloadCadastro"))).transform({ case (header, body) => 
            financialdatagrabber.services.cvm.SolicAutorizDownloadCadastroOutput(scalaxb.fromXML[financialdatagrabber.services.cvm.SolicAutorizDownloadCadastroResponse](({
              scala.xml.Elem(null, "Body", scala.xml.Null, defaultScope, true, body.toSeq: _*)
            } \ "solicAutorizDownloadCadastroResponse").head, Nil)) }, {
              case x: scalaxb.Fault[_] => x
              case x => x
            })
      def solicAutorizDownloadArqComptc(solicAutorizDownloadArqComptc: financialdatagrabber.services.cvm.SolicAutorizDownloadArqComptc): Future[financialdatagrabber.services.cvm.SolicAutorizDownloadArqComptcOutput] = 
        soapClient.requestResponse(scalaxb.toXML(solicAutorizDownloadArqComptc, Some("http://www.cvm.gov.br/webservices/"), "solicAutorizDownloadArqComptc", defaultScope),
            scalaxb.toXML(sessaoIdHeader, Some("http://www.cvm.gov.br/webservices/"), "sessaoIdHeader", defaultScope), defaultScope, baseAddress, "POST", Some(new java.net.URI("http://www.cvm.gov.br/webservices/solicAutorizDownloadArqComptc"))).transform({ case (header, body) => 
            financialdatagrabber.services.cvm.SolicAutorizDownloadArqComptcOutput(scalaxb.fromXML[financialdatagrabber.services.cvm.SolicAutorizDownloadArqComptcResponse](({
              scala.xml.Elem(null, "Body", scala.xml.Null, defaultScope, true, body.toSeq: _*)
            } \ "solicAutorizDownloadArqComptcResponse").head, Nil)) }, {
              case x: scalaxb.Fault[_] => x
              case x => x
            })
      def solicAutorizDownloadArqEntrega(solicAutorizDownloadArqEntrega: financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntrega): Future[financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntregaOutput] = 
        soapClient.requestResponse(scalaxb.toXML(solicAutorizDownloadArqEntrega, Some("http://www.cvm.gov.br/webservices/"), "solicAutorizDownloadArqEntrega", defaultScope),
            scalaxb.toXML(sessaoIdHeader, Some("http://www.cvm.gov.br/webservices/"), "sessaoIdHeader", defaultScope), defaultScope, baseAddress, "POST", Some(new java.net.URI("http://www.cvm.gov.br/webservices/solicAutorizDownloadArqEntrega"))).transform({ case (header, body) => 
            financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntregaOutput(scalaxb.fromXML[financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntregaResponse](({
              scala.xml.Elem(null, "Body", scala.xml.Null, defaultScope, true, body.toSeq: _*)
            } \ "solicAutorizDownloadArqEntregaResponse").head, Nil)) }, {
              case x: scalaxb.Fault[_] => x
              case x => x
            })
      def solicAutorizDownloadArqEntregaPorData(solicAutorizDownloadArqEntregaPorData: financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntregaPorData): Future[financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntregaPorDataOutput] = 
        soapClient.requestResponse(scalaxb.toXML(solicAutorizDownloadArqEntregaPorData, Some("http://www.cvm.gov.br/webservices/"), "solicAutorizDownloadArqEntregaPorData", defaultScope),
            scalaxb.toXML(sessaoIdHeader, Some("http://www.cvm.gov.br/webservices/"), "sessaoIdHeader", defaultScope), defaultScope, baseAddress, "POST", Some(new java.net.URI("http://www.cvm.gov.br/webservices/solicAutorizDownloadArqEntregaPorData"))).transform({ case (header, body) => 
            financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntregaPorDataOutput(scalaxb.fromXML[financialdatagrabber.services.cvm.SolicAutorizDownloadArqEntregaPorDataResponse](({
              scala.xml.Elem(null, "Body", scala.xml.Null, defaultScope, true, body.toSeq: _*)
            } \ "solicAutorizDownloadArqEntregaPorDataResponse").head, Nil)) }, {
              case x: scalaxb.Fault[_] => x
              case x => x
            })
      def solicAutorizDownloadArqAnual(solicAutorizDownloadArqAnual: financialdatagrabber.services.cvm.SolicAutorizDownloadArqAnual): Future[financialdatagrabber.services.cvm.SolicAutorizDownloadArqAnualOutput] = 
        soapClient.requestResponse(scalaxb.toXML(solicAutorizDownloadArqAnual, Some("http://www.cvm.gov.br/webservices/"), "solicAutorizDownloadArqAnual", defaultScope),
            scalaxb.toXML(sessaoIdHeader, Some("http://www.cvm.gov.br/webservices/"), "sessaoIdHeader", defaultScope), defaultScope, baseAddress, "POST", Some(new java.net.URI("http://www.cvm.gov.br/webservices/solicAutorizDownloadArqAnual"))).transform({ case (header, body) => 
            financialdatagrabber.services.cvm.SolicAutorizDownloadArqAnualOutput(scalaxb.fromXML[financialdatagrabber.services.cvm.SolicAutorizDownloadArqAnualResponse](({
              scala.xml.Elem(null, "Body", scala.xml.Null, defaultScope, true, body.toSeq: _*)
            } \ "solicAutorizDownloadArqAnualResponse").head, Nil)) }, {
              case x: scalaxb.Fault[_] => x
              case x => x
            })
      def retornaDtLmtEntrDocsArqsDisp(retornaDtLmtEntrDocsArqsDisp: financialdatagrabber.services.cvm.RetornaDtLmtEntrDocsArqsDisp): Future[financialdatagrabber.services.cvm.RetornaDtLmtEntrDocsArqsDispOutput] = 
        soapClient.requestResponse(scalaxb.toXML(retornaDtLmtEntrDocsArqsDisp, Some("http://www.cvm.gov.br/webservices/"), "retornaDtLmtEntrDocsArqsDisp", defaultScope),
            scalaxb.toXML(sessaoIdHeader, Some("http://www.cvm.gov.br/webservices/"), "sessaoIdHeader", defaultScope), defaultScope, baseAddress, "POST", Some(new java.net.URI("http://www.cvm.gov.br/webservices/retornaDtLmtEntrDocsArqsDisp"))).transform({ case (header, body) => 
            financialdatagrabber.services.cvm.RetornaDtLmtEntrDocsArqsDispOutput(scalaxb.fromXML[financialdatagrabber.services.cvm.RetornaDtLmtEntrDocsArqsDispResponse](({
              scala.xml.Elem(null, "Body", scala.xml.Null, defaultScope, true, body.toSeq: _*)
            } \ "retornaDtLmtEntrDocsArqsDispResponse").head, Nil)) }, {
              case x: scalaxb.Fault[_] => x
              case x => x
            })
      def retornaListaDownloadDocs(retornaListaDownloadDocs: financialdatagrabber.services.cvm.RetornaListaDownloadDocs): Future[financialdatagrabber.services.cvm.RetornaListaDownloadDocsOutput] = 
        soapClient.requestResponse(scalaxb.toXML(retornaListaDownloadDocs, Some("http://www.cvm.gov.br/webservices/"), "retornaListaDownloadDocs", defaultScope),
            scalaxb.toXML(sessaoIdHeader, Some("http://www.cvm.gov.br/webservices/"), "sessaoIdHeader", defaultScope), defaultScope, baseAddress, "POST", Some(new java.net.URI("http://www.cvm.gov.br/webservices/retornaListaDownloadDocs"))).transform({ case (header, body) => 
            financialdatagrabber.services.cvm.RetornaListaDownloadDocsOutput(scalaxb.fromXML[financialdatagrabber.services.cvm.RetornaListaDownloadDocsResponse](({
              scala.xml.Elem(null, "Body", scala.xml.Null, defaultScope, true, body.toSeq: _*)
            } \ "retornaListaDownloadDocsResponse").head, Nil)) }, {
              case x: scalaxb.Fault[_] => x
              case x => x
            })
      def login(login: financialdatagrabber.services.cvm.Login): Future[financialdatagrabber.services.cvm.LoginOutput] = 
        soapClient.requestResponse(scalaxb.toXML(login, Some("http://www.cvm.gov.br/webservices/"), "Login", defaultScope),
            scalaxb.toXML(sessaoIdHeader, Some("http://www.cvm.gov.br/webservices/"), "sessaoIdHeader", defaultScope), defaultScope, baseAddress, "POST", Some(new java.net.URI("http://www.cvm.gov.br/webservices/Login"))).transform({ case (header, body) => 
            financialdatagrabber.services.cvm.LoginOutput(scalaxb.fromXML[financialdatagrabber.services.cvm.LoginResponse](({
              scala.xml.Elem(null, "Body", scala.xml.Null, defaultScope, true, body.toSeq: _*)
            } \ "LoginResponse").head, Nil)) }, {
              case x: scalaxb.Fault[_] => x
              case x => x
            })
    }
  }



}

